(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{841:function(t,v,a){"use strict";a.r(v);var e=a(14),_=Object(e.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"异步编程-1-回调函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步编程-1-回调函数"}},[t._v("#")]),t._v(" 异步编程（1）：回调函数")]),t._v(" "),a("h2",{attrs:{id:"什么叫「异步」"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么叫「异步」"}},[t._v("#")]),t._v(" 什么叫「异步」")]),t._v(" "),a("ul",[a("li",[t._v("“异步”，就是一个任务分成两段，先执行第一段，转而执行其他任务，等做完后再回来执行剩下的第二段。这种不连续的执行，就叫异步。")]),t._v(" "),a("li",[t._v("“同步”，连续的执行的任务就是同步。由于连续执行，不能插入其他任务，类似操作系统从硬盘读取文件所花费的时间，就只能等待，效率很低。")])]),t._v(" "),a("p",[t._v("异步编程的语法目标，就是 "),a("code",[t._v("“让它更像同步编程”")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"回调函数→事件发布-订阅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回调函数→事件发布-订阅"}},[t._v("#")]),t._v(" 回调函数→事件发布/订阅")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Q：什么是回调函数？")])]),t._v(" "),a("li",[a("p",[t._v("A：js异步编程的实现就是回调函数。回调函数就是把任务的第二段单独写在一个callback函数中，等到重新执行该任务时直接调用这个callback函数。")])]),t._v(" "),a("li",[a("p",[t._v("Q：回调函数有什么问题？")])]),t._v(" "),a("li",[a("p",[t._v("A：回调函数本身没有问题，问题在于多层回调嵌套所导致的"),a("code",[t._v("“回调地狱”")]),t._v("。代码不是纵向发展而是横向发展的，杂乱不好管理。")])]),t._v(" "),a("li",[a("p",[t._v("Q：解决途径？")])]),t._v(" "),a("li",[a("p",[t._v("A：事件"),a("strong",[t._v("发布订阅")]),t._v("就是为了解决回调嵌套问题的。传送门"),a("RouterLink",{attrs:{to:"/Question-Bank/nodejs/eventEmitter.html"}},[t._v("EventEmitter实现")])],1)])])])}),[],!1,null,null,null);v.default=_.exports}}]);