(window.webpackJsonp=window.webpackJsonp||[]).push([[272],{849:function(t,e,i){"use strict";i.r(e);var s=i(14),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git-bisect"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-bisect"}},[t._v("#")]),t._v(" git bisect")]),t._v(" "),i("p",[t._v("git bisect：二分查找错误commit的命令。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git log --pretty=oneline // 共 101次提交，最早一次是4d83cf\n$ git bisect start HEAD 4d83cf // $ git bisect start [终点] [起点],确定查找范围，启动查错，则会选择中间的第51次提交\n$ git bisect good //第51次提交，刷新浏览器后表现正常，标记为正确，git会总动修改查错范围为51到head(101次)，选择中间的第76次提交查错\n$ git bisect bad // 第76次提交,刷新浏览器后表现出错，标记为错误，git会总动修改查错范围为51到76次，重复以上过程，直到找到出问题的那次提交为止\nb47892 is the first bad commit\n$ git bisect reset // 退出查错，回到最近一次的代码提交\n")])])]),i("p",[t._v("传送门："),i("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/12/git-bisect.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮大教程 git bisect"),i("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);