(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{764:function(t,s,a){"use strict";a.r(s);var r=a(14),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ssr-服务端渲染和同构原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr-服务端渲染和同构原理"}},[t._v("#")]),t._v(" SSR 服务端渲染和同构原理")]),t._v(" "),a("h2",{attrs:{id:"为什么要服务端渲染-ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要服务端渲染-ssr"}},[t._v("#")]),t._v(" 为什么要服务端渲染（SSR）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("避免首屏等待")]),t._v("，即"),a("code",[t._v("TTFP，首屏等待时间")]),t._v("：在 SPA 模式下，所有的数据请求和 Dom 渲染都在浏览器端完成，所以当我们第一次访问页面的时候很可能会存在“白屏”等待，而服务端渲染所有数据请求和 html内容已在服务端处理完成，浏览器收到的是完整的 html 内容，可以更快的看到渲染内容，在服务端完成数据请求肯定是要比在浏览器端效率要高的多。")]),t._v(" "),a("li",[a("strong",[t._v("更好支持SEO")]),t._v("：有些网站的流量来源主要还是靠搜索引擎，所以网站的 SEO 还是很重要的，而 SPA 模式对搜索引擎不够友好，要想彻底解决这个问题只能采用服务端直出。")])]),t._v(" "),a("p",[t._v("主流的SSR框架有：NEXT.js，对应React，Nuxt.js，对应Vue。")]),t._v(" "),a("h2",{attrs:{id:"传统ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传统ssr"}},[t._v("#")]),t._v(" 传统SSR")]),t._v(" "),a("p",[a("code",[t._v("传统的SSR服务端渲染")]),t._v("，是指"),a("strong",[t._v("服务端直接吐出具有数据的HTML页面，而不是在客户端拼接的HTML")]),t._v("。单纯实现SSR是很传统的技术，很简单，不分语言，随便用 php 、jsp、asp、node 等都可以实现。")]),t._v(" "),a("p",[t._v("而现今流行的SPA单页应用，则是"),a("code",[t._v("CSR客户端渲染")]),t._v("，指的是在客户端通过Ajax请求来拼装数据，所有页面都是在客户端拼接好的。")]),t._v(" "),a("p",[t._v("如果只实现 SSR 其实没意义，技术上没有任何发展和进步，否则 SPA 技术就不会出现。")]),t._v(" "),a("h2",{attrs:{id:"前端同构应用-ssr-spa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端同构应用-ssr-spa"}},[t._v("#")]),t._v(" 前端同构应用（SSR + SPA）")]),t._v(" "),a("p",[a("strong",[t._v("最好的方案是")]),t._v("："),a("code",[t._v("SSR + SPA 的前端同构应用")]),t._v("。第一次访问页面是服务端渲染，基于第一次访问，后续的交互就是 SPA 的效果和体验，还不影响SEO。简单说就是一个前端项目里的组件，部分服务端渲染后输出，部分由客户端异步渲染，既保障网页渲染速度，也有利于搜索引擎 SEO。")]),t._v(" "),a("p",[a("strong",[t._v("同构")]),t._v("的意思是：服务端和前端使用同一套渲染层代码，在服务端执行虚拟DOM(一般用Node.js)，此时服务端使用和前端相同的虚拟DOM的原理来拼接HTML模板。")]),t._v(" "),a("p",[t._v("得益于 Node.js 既是后端又是用JS来写，使得使用一套代码就能在服务端和客户端都执行渲染，最大限度的重用代码（同构），减少开发维护成本。当前的前端同构应用，需要采用 react 或者 vue 等前端框架，与 node SSR 结合来实现。")]),t._v(" "),a("h2",{attrs:{id:"同构应用需要解决的3个问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同构应用需要解决的3个问题"}},[t._v("#")]),t._v(" 同构应用需要解决的3个问题")]),t._v(" "),a("p",[t._v("所谓"),a("code",[t._v("「同构」")]),t._v("就是"),a("strong",[t._v("采用一套代码，构建双端（server 和 client）逻辑，最大限度的重用代码，不用维护两套代码")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"路由同构-双端路由如何维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由同构-双端路由如何维护"}},[t._v("#")]),t._v(" "),a("code",[t._v("路由同构")]),t._v("：双端路由如何维护？")]),t._v(" "),a("p",[t._v("原理是将"),a("strong",[t._v("路由配置抽取出来")]),t._v("，方便在服务端以及客户端共用（建议将路由配置统一放置到stores/routes）。node server 通过req url path 进行组件的查找，得到需要渲染的组件。路由匹配可以使用 React官方维护的"),a("code",[t._v("react-router-config")]),t._v("库，实现嵌套路由的查找。")]),t._v(" "),a("h3",{attrs:{id:"数据预取同构-获取数据的方法和逻辑写在哪里"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据预取同构-获取数据的方法和逻辑写在哪里"}},[t._v("#")]),t._v(" "),a("code",[t._v("数据预取同构")]),t._v("：获取数据的方法和逻辑写在哪里？")]),t._v(" "),a("p",[a("code",[t._v("数据预取同构")]),t._v("，解决双端如何使用同一套数据请求方法来进行数据请求。在查找到要渲染的组件后，需要预先得到此组件所需要的数据，然后将数据传递给组件后，再进行组件的渲染。")]),t._v(" "),a("h4",{attrs:{id:"可选的方案有-比较推荐前两种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选的方案有-比较推荐前两种"}},[t._v("#")]),t._v(" 可选的方案有（比较推荐前两种）")]),t._v(" "),a("p",[t._v("获取数据方法写在哪里：")]),t._v(" "),a("ol",[a("li",[t._v("使用高阶组件给路由页面组件绑定数据获取方法（比如"),a("code",[t._v("withSSR(WrappedCompoennt, getInitialProps)")]),t._v("）。因此，我们的页面组件应该尽可能依赖于从其props中获取相关页面所需数据，减少其内部自身的数据获取逻辑。")]),t._v(" "),a("li",[t._v("可以通过给组件定义静态（static）方法来处理，在 server 端和组件内都也可以直接通过组件（function）来进行访问（比如"),a("code",[t._v("Index.getInitialProps")]),t._v("）。")]),t._v(" "),a("li",[t._v("再或者在声明路由的时候把数据请求方法关联到路由中（比如定一个 "),a("code",[t._v("getInitialProps")]),t._v(" 方法，然后在查找到路由后就可以判断"),a("code",[t._v("route")]),t._v("上是否存在"),a("code",[t._v("getInitialProps")]),t._v("这个方法）。")])]),t._v(" "),a("h3",{attrs:{id:"渲染同构-如何复用-服务端html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染同构-如何复用-服务端html"}},[t._v("#")]),t._v(" "),a("code",[t._v("渲染同构")]),t._v("：如何复用 服务端html？")]),t._v(" "),a("p",[t._v("假设上述两个问题解决了，整个服务可以跑起来（路由能够正确匹配，数据预取正常，服务端可以直出组件的 html ，浏览器加载 js 代码正常，查看网页源代码能看到 html 内容）。但是依然有这样的问题未解决："),a("strong",[t._v("当浏览器端的 js 执行完成后，发现数据重新请求了，组件的重新渲染导致页面看上去有些闪烁。")])]),t._v(" "),a("ul",[a("li",[t._v("这是因为在浏览器端，"),a("code",[t._v("双端节点对比失败，导致组件重新渲染")]),t._v("，也就是只有当服务端和浏览器端渲染的组件具有相同的props 和 DOM 结构的时候，组件才能只渲染一次。")]),t._v(" "),a("li",[t._v("虽然我们实现了双端的数据预取同构，但是数据也仅仅是服务端有，浏览器端是没有这个数据，当客户端进行首次组件渲染的时候没有初始化的数据，渲染出的节点肯定和服务端直出的节点不同，导致组件重新渲染。")])]),t._v(" "),a("h4",{attrs:{id:"解决方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方式"}},[t._v("#")]),t._v(" 解决方式")]),t._v(" "),a("p",[a("code",[t._v("渲染同构")]),t._v("方案：")]),t._v(" "),a("ol",[a("li",[t._v("数据注水："),a("strong",[t._v("在服务端将预取的数据注入到浏览器，使浏览器端可以访问到。")])])]),t._v(" "),a("ul",[a("li",[t._v("实现方式：直接"),a("code",[t._v("挂在html")]),t._v("中"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%DATA%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("var __DATA__=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("initialProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'null'")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("。\n")])])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("数据脱水："),a("strong",[t._v("客户端进行渲染前，需要先将数据传入对应的组件，保证props的一致性。")]),t._v(" "),a("ul",[a("li",[t._v("实现方式1：通过"),a("code",[t._v("高阶组件")]),t._v("，添加预取的数据。")]),t._v(" "),a("li",[t._v("实现方式2：通过 "),a("code",[t._v("context")]),t._v(" 传递，只需要在入口处传入。")])])])]),t._v(" "),a("h2",{attrs:{id:"其他要注意的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他要注意的问题"}},[t._v("#")]),t._v(" 其他要注意的问题")]),t._v(" "),a("p",[t._v("解决了上面3个问题后，可以说「同构」应用的基本实现原理就清楚了，但还有一些问题需要解决。")]),t._v(" "),a("h3",{attrs:{id:"入口文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入口文件配置"}},[t._v("#")]),t._v(" 入口文件配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  ├── app\n  │   ├── components\n  │   ├── hooks\n  │   ├── modules\n  │   ├── types\n  │   ├── utils\n  │   ├── index.tsx\n+ │   ├── index.node.tsx\n  │   ├── about.tsx\n+ │   └── about.node.tsx\n  ├── public\n  │   ├── index.html\n+ │   ├── index.node.html\n  │   └── service-worker.js\n")])])]),a("h4",{attrs:{id:"ssr入口文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr入口文件"}},[t._v("#")]),t._v(" SSR入口文件")]),t._v(" "),a("p",[t._v("如果不考虑异步路由提取，基本的 "),a("code",[t._v("index.node.tsx")]),t._v(" 里的内容大致如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" renderToString "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom/server'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("renderer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("templateFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// templateFile 模板文件路径，读取模板文件内容")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("templateFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取react组件的渲染字符串")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换模板中占位注释字符，完成渲染初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\x3c!-- root --\x3e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请注意这里需要导出renderer方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" renderer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("React通过"),a("code",[t._v("renderToString(<App />)")]),t._v("方法将应用代码转换成字符串，再替换到页面中占位符的位置。")]),t._v(" "),a("h4",{attrs:{id:"csr入口文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csr入口文件"}},[t._v("#")]),t._v(" CSR入口文件")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app/index.tsx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ReactDOM "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BrowserRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Route "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-router-dom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" renderRoutes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-router-config'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" routes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stores/routes'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * CSR端也需要使用 react-router-config 的 renderRoutes 方法渲染路由\n */")]),t._v("\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("__SSR__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hydrate'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'render'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BrowserRouter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderRoutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("routes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("BrowserRouter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wrap'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("初次渲染可以调用两种方法：ReactDOM.render和"),a("code",[t._v("ReactDOM.hydrate")]),t._v("，需要通过环境变量判断使用对应的方法渲染。")]),t._v(" "),a("p",[a("code",[t._v("ReactDOM.hydrate")]),t._v("会去"),a("strong",[t._v("复用原本已经存在的 DOM 节点，尝试在已有标记上绑定事件监听器")]),t._v("。减少了重新生成节点以及删除原本 DOM 节点的开销，来加速初次渲染的功能。")]),t._v(" "),a("h3",{attrs:{id:"node端没有window和webstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node端没有window和webstorage"}},[t._v("#")]),t._v(" node端没有window和webstorage")]),t._v(" "),a("p",[t._v("因此需要通过三目运算符来判断环境变量，使用"),a("code",[t._v("typeof window === 'undefined' ? global : window")]),t._v("来对应处理。")]),t._v(" "),a("p",[t._v("对于需要保存的变量，只能存储到cookie中，或者直接将页面的初始数据通过全局变量"),a("code",[t._v("__DATA__")]),t._v("渲染到页面上，让 CSR 端的组件读取，以实现同构渲染：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" template\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%ROOT%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%DATA%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("var __DATA__=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("initialProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'null'")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"css过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css过滤"}},[t._v("#")]),t._v(" css过滤")]),t._v(" "),a("p",[t._v("在"),a("strong",[t._v("服务端css文件是无法执行的")]),t._v("，因为本来就不需要渲染 css，所以可以在编译的时候通过babel将css代码过滤掉。")]),t._v(" "),a("h3",{attrs:{id:"动态路由ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由ssr"}},[t._v("#")]),t._v(" 动态路由SSR")]),t._v(" "),a("p",[t._v("SPA模式下大部分都会实现组件分包和按需加载，防止所有代码打包在一个文件过大影响页面的加载和渲染，影响用户体验。")]),t._v(" "),a("p",[t._v("但"),a("strong",[t._v("SSR是不支持异步组件的")]),t._v("。因为在做路由同构的时候，双端使用的是同一个 route配置文件routes-config.js，如果改成按需加载的异步组件，在路由查找后得到的组件就是改变后的异步组件，根本无法转换出组件内容。")]),t._v(" "),a("p",[t._v("具体分析一下流程：")]),t._v(" "),a("ol",[a("li",[t._v("首先服务端直出了 html 内容；")]),t._v(" "),a("li",[t._v("而此时浏览器端js执行完后需要做按需加载，在按需加载前的组件默认的内容就是"),a("code",[t._v("<span>正在加载......</span>")]),t._v("这个缺省内容；")]),t._v(" "),a("li",[t._v("这个缺省内容和服务端直出的 html 内容完全不同，所以双端对比失败，页面会渲染成"),a("code",[t._v("<span>正在加载......</span>")]),t._v("；")]),t._v(" "),a("li",[t._v("然后按需加载完成后组件再次渲染，此时渲染的就是真正的组件了。")])]),t._v(" "),a("h3",{attrs:{id:"seo支持-路由页动态生成tdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seo支持-路由页动态生成tdk"}},[t._v("#")]),t._v(" SEO支持（路由页动态生成TDK）")]),t._v(" "),a("p",[t._v("页面的 SEO 效果取决于")]),t._v(" "),a("ul",[a("li",[t._v("页面的主体内容")]),t._v(" "),a("li",[t._v("页面的 TDK（标题 title,描述 description,关键词 keywords）以及关键词的分布和密度\n实现了SSR之后页面的主体内容有了，还需要"),a("strong",[t._v("动态设置页面的TDK让每个页面（路由）的都拥有与自己相匹配的内容摘要")]),t._v("。")])]),t._v(" "),a("p",[t._v("这里建议采用"),a("a",{attrs:{href:"https://github.com/nfl/react-helmet",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-helmet"),a("OutboundLink")],1),t._v("库来实现。")]),t._v(" "),a("h3",{attrs:{id:"结合状态管理的ssr实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结合状态管理的ssr实现"}},[t._v("#")]),t._v(" 结合状态管理的SSR实现")]),t._v(" "),a("p",[t._v("直接将使用 context 传递数据改成按 store 传递，参考代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderUI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("initialData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hydrate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BrowserRouter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Provider store"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("initialData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Routes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Provider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("BrowserRouter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rootEle'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000020417285",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文吃透 React SSR 服务端渲染和同构原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/qiqiboy/tiger-new#ssr",target:"_blank",rel:"noopener noreferrer"}},[t._v("tiger-new#ssr"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000016722457",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 中同构（SSR）原理脉络梳理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/react-dom.html#hydrate",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网hydrate()"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://react.jokcy.me/book/features/hydrate.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("hydrate"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("hydrate:补充水分，即注水操作")])])}),[],!1,null,null,null);s.default=n.exports}}]);