(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{498:function(s,t,a){s.exports=a.p+"assets/img/implicit-conversion-rules.22617f63.png"},806:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("blockquote",[e("p",[s._v("本文是在 ConardLi的“"),e("a",{attrs:{href:"https://juejin.im/post/5cec1bcff265da1b8f1aa08f",target:"_blank",rel:"noopener noreferrer"}},[s._v("【JS 进阶】你真的掌握变量和类型了吗"),e("OutboundLink")],1),s._v("”文章上的总结和扩展，集中记述了js中的变量和数据类型的相关知识点及应用场景，共分为5部分。")])]),s._v(" "),e("blockquote",[e("p",[s._v("本文为“JS专题-变量与类型”的第4篇，4）JS的类型转换，由于JavaScript是"),e("code",[s._v("弱类型")]),s._v("的语言，所以类型转换发生非常频繁，前一章的装箱和拆箱其实就是一种类型转换。类型转换分为两种，隐式转换即程序自动进行的类型转换，强制转换即我们手动进行的类型转换。强制转换规则比较正常，在前一篇包装类型中已有描述，本文主要关注"),e("code",[s._v("让人头疼的可能发生隐式类型转换")]),s._v("的几个场景，以及如何转换：")])]),s._v(" "),e("h1",{attrs:{id:"js的类型转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js的类型转换"}},[s._v("#")]),s._v(" JS的类型转换")]),s._v(" "),e("p",[s._v("由于JavaScript是"),e("code",[s._v("弱类型")]),s._v("的语言，所以类型转换发生非常频繁，前一章的装箱和拆箱其实就是一种类型转换。类型转换分为两种，隐式转换即程序自动进行的类型转换，强制转换即我们手动进行的类型转换。强制转换规则比较正常，在前一篇包装类型中已有描述，本文主要关注"),e("code",[s._v("让人头疼的可能发生隐式类型转换")]),s._v("的几个场景，以及如何转换：")]),s._v(" "),e("h2",{attrs:{id:"隐式类型转换的场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换的场景"}},[s._v("#")]),s._v(" 隐式类型转换的场景")]),s._v(" "),e("ul",[e("li",[s._v("if语句和逻辑语句")]),s._v(" "),e("li",[s._v("数学运算符")]),s._v(" "),e("li",[s._v("Native调用(如console.log、alert)")])]),s._v(" "),e("h2",{attrs:{id:"类型转换规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型转换规则"}},[s._v("#")]),s._v(" 类型转换规则")]),s._v(" "),e("p",[s._v("各种类型间互转所符合的隐式类型转换规则如下表：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(498),alt:"隐式类型转换规则表"}})]),s._v(" "),e("h3",{attrs:{id:"if语句和逻辑语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if语句和逻辑语句"}},[s._v("#")]),s._v(" if语句和逻辑语句")]),s._v(" "),e("p",[s._v("在if语句和逻辑语句中，如果只有单个变量，会先将变量转换为Boolean值，只有下面"),e("code",[s._v("6种")]),s._v("情况会转换成false，"),e("code",[s._v("null、undefined、''、NaN、0、false")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"数学运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数学运算符"}},[s._v("#")]),s._v(" 数学运算符")]),s._v(" "),e("ul",[e("li",[s._v("在对各种"),e("code",[s._v("非Number")]),s._v("类型运用除加法之外的数学运算符"),e("code",[s._v("(- * / % > < )")]),s._v("时，会先将"),e("code",[s._v("非Number")]),s._v("类型转换为"),e("code",[s._v("Number")]),s._v("类型:")])]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  NaN")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  10")]),s._v("\n")])])]),e("ul",[e("li",[s._v("注意："),e("code",[s._v("+是个例外")]),s._v("，它既可以是算术加号，又可以是字符串连接符号，具体的要看它的操作数：\n"),e("ol",[e("li",[s._v("当一侧为String类型，会优先将另一侧转换为字符串类型进行"),e("code",[s._v("拼接")]),s._v("。")]),s._v(" "),e("li",[s._v("当一侧为Number类型，另一侧为原始类型，则将原始类型转换为Number类型"),e("code",[s._v("相加")]),s._v("。")]),s._v(" "),e("li",[s._v("当一侧为Number类型，另一侧为引用类型，将引用类型和Number类型转换成字符串后"),e("code",[s._v("拼接")]),s._v("。")])])])]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123123   （规则1）")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123    （规则2）")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 124    （规则2）")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123[object Object]    （规则3）")]),s._v("\n")])])]),e("ul",[e("li",[s._v("注意："),e("code",[s._v("{}更是个例外")]),s._v("，{}在+号前，系统判断其为代码块，不参加运算；{}在+号后，被当做对象处理：")])]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123[object Object]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -123")]),s._v("\n")])])]),e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")]),s._v(" ==")]),s._v(" "),e("p",[s._v("使用"),e("code",[s._v("==")]),s._v("时，若两侧类型相同，则比较结果和"),e("code",[s._v("===")]),s._v("相同，否则会发生隐式转换，使用==时发生的转换可以分为几种不同的情况（只考虑两侧类型不同）：")]),s._v(" "),e("ol",[e("li",[s._v("NaN")])]),s._v(" "),e("p",[e("code",[s._v("NaN")]),s._v("和其他任何类型比较永远返回false(包括和他自己)。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("Boolean")])]),s._v(" "),e("p",[s._v("Boolean和其他任何类型比较，"),e("code",[s._v("Boolean首先被转换为Number类型")]),s._v("。\n**注意：**undefined、null和Boolean比较，虽然undefined、null和false都很容易被想象成假值，但是他们比较结果是false，原因是false首先被转换成0：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("null和undefined")])]),s._v(" "),e("p",[e("code",[s._v("null == undefined")]),s._v("比较结果是true，除此之外，null、undefined和其他任何结果的比较值都为false。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[s._v("String和Number")])]),s._v(" "),e("p",[s._v("String和Number比较，先将String转换为Number类型。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[s._v("原始类型和引用类型")])]),s._v(" "),e("p",[s._v("当原始类型和引用类型做比较时，引用类型会依照"),e("code",[s._v("ToPrimitive")]),s._v("规则转换为原始类型:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[object Object]'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1,2,3'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),e("p",[e("strong",[s._v("注意：")])]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),e("p",[s._v("复制代码!的优先级高于==，![]首先会被转换为false，然后根据上面第二点，false转换成Number类型0，左侧[]转换为0，两侧比较相等。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),e("p",[s._v("复制代码根据数组的ToPrimitive规则，数组元素为null或undefined时，该元素被当做空字符串处理，所以[null]、[undefined]都会被转换为0")]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),e("p",[s._v("既然 == 有这么多坑，请务必使用 === 来判断值相等")])]),s._v(" "),e("h2",{attrs:{id:"非逻辑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非逻辑"}},[s._v("#")]),s._v(" "),e("code",[s._v("!")]),s._v("非逻辑")]),s._v(" "),e("p",[s._v("逻辑非（!）操作符首先通过"),e("code",[s._v("Boolean()")]),s._v("函数将它的操作值转换为布尔值，"),e("code",[s._v("然后求反")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"有意思的面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有意思的面试题"}},[s._v("#")]),s._v(" 有意思的面试题")]),s._v(" "),e("h4",{attrs:{id:"一道经典的面试题-如何让-a-1-a-2-a-3。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一道经典的面试题-如何让-a-1-a-2-a-3。"}},[s._v("#")]),s._v(" 一道经典的面试题，如何让："),e("code",[s._v("a == 1 && a == 2 && a == 3")]),s._v("。")]),s._v(" "),e("p",[s._v("根据"),e("code",[s._v("拆箱转换")]),s._v("，以及"),e("code",[s._v("==的隐式转换")]),s._v("，写出答案：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   value"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("valueOf")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("pop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("h4",{attrs:{id:"如何判断两个对象相等"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何判断两个对象相等"}},[s._v("#")]),s._v(" 如何判断两个对象相等")]),s._v(" "),e("p",[s._v("转换为字符串判断")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);