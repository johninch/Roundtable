(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{918:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"文件指纹chunkhash-与-持久化缓存caching"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件指纹chunkhash-与-持久化缓存caching"}},[s._v("#")]),s._v(" 文件指纹chunkhash 与 持久化缓存caching")]),s._v(" "),a("h2",{attrs:{id:"文件指纹chunkhash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件指纹chunkhash"}},[s._v("#")]),s._v(" 文件指纹chunkhash")]),s._v(" "),a("p",[s._v("文件指纹：打包后输出的文件名的后缀。")]),s._v(" "),a("h3",{attrs:{id:"指纹类别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指纹类别"}},[s._v("#")]),s._v(" 指纹类别")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Hash")]),s._v("：和整个项目的构建相关，build-specific，即每次编译都不同。\n"),a("ul",[a("li",[a("strong",[s._v("可以在测试环境打包的JS文件中使用")]),a("code",[s._v("'[name].[hash]'")]),s._v("。")])])]),s._v(" "),a("li",[a("code",[s._v("Chunkhash")]),s._v("：和 Webpack 打包的 chunk 有关，chunk-specific，是根据每个 chunk 的内容计算出的 hash，不同的 entry 会生出不同的 chunkhash。\n"),a("ul",[a("li",[a("strong",[s._v("适用于生产环境打包后的JS文件")]),a("code",[s._v("'[name].[chunkhash]'")]),s._v("，最大限度利用浏览器缓存。")])])]),s._v(" "),a("li",[a("code",[s._v("Contenthash")]),s._v("：根据文件内容来定义 hash，文件内容不变，则 contenthash 不变。")])]),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("[chunkhash]不能和 HMR 一起使用")]),s._v(" "),a("p",[s._v("注意：开发环境应该直接用"),a("code",[s._v("[name]")]),s._v("，不要在开发环境使用"),a("code",[s._v("[chunkhash]、[hash]、[contenthash]")]),s._v("，因为"),a("strong",[s._v("不需要在开发环境")]),s._v("做"),a("strong",[s._v("持久缓存")]),s._v("，而且这样会增加编译时间。")]),s._v(" "),a("p",[s._v("这也是为什么常说”"),a("strong",[s._v("[chunkhash]不能和 HMR 一起使用")]),s._v("“。")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("占位符指定长度")]),s._v(" "),a("p",[s._v("注意：hash都是比较长的，可以在占位符上指定我们要的长度，来生成我们想要的位数，如："),a("code",[s._v("[hash:8]、[chunkhash:8]、[contenthash:8]")]),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"各类别适用文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各类别适用文件"}},[s._v("#")]),s._v(" 各类别适用文件")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("JS文件")]),s._v("的指纹设置"),a("code",[s._v("[chunkhash]")]),s._v("；\n"),a("ul",[a("li",[s._v("设置 output 的 filename。")])])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("output"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[name][chunkhash:8].js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" __dirname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/dist'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("strong",[s._v("CSS文件")]),s._v("的指纹设置"),a("code",[s._v("[contenthash]")]),s._v("；\n"),a("ul",[a("li",[s._v("设置 MiniCssExtractPlugin 的 filename。")])])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MiniCssExtractPlugin：将css资源提取到一个独立的文件")]),s._v("\nplugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MiniCssExtractPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("[name][contenthash:8].css")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("ul",[a("li",[a("strong",[s._v("Images/Fonts")]),s._v("的指纹设置"),a("code",[s._v("[hash]")]),s._v("；\n"),a("ul",[a("li",[a("strong",[s._v("注意：图片，字体文件的hash和css/js资源的hash概念不一样，图片，字体文件的hash是由内容决定的。")])]),s._v(" "),a("li",[s._v("设置 file-loader 的 name。")])])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    rules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.(png|svg|jpg|gif)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            use"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'file-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                options"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'img/[name][hash:8].[ext] '")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("各类别适用文件")]),s._v(" "),a("ul",[a("li",[s._v("JS文件的指纹设置'[name][chunkhash:8].js'\n"),a("ul",[a("li",[s._v("（"),a("em",[s._v("js文件为什么不用contenthash呢")]),s._v("？）")]),s._v(" "),a("li",[s._v("因为js引入了css模块，如果css改变，css使用的contenthash，css的指纹变了，但对于引入它的js模块来说，如果使用contenthash，则js模块指纹不变。这样就会出错了，因为js无法引入更新后的css文件。")])])]),s._v(" "),a("li",[s._v("CSS文件的指纹设置'[name][contenthash:8].css'\n"),a("ul",[a("li",[s._v("（"),a("em",[s._v("css文件为什么不用chunkhash呢")]),s._v("？）")]),s._v(" "),a("li",[s._v("因为js引入了css模块，如果js改变，js使用的是chunkhash，则chunkhash会改变，那么其引入的css模块也会跟着改变指纹，但这是不合理的，因为css自身内容根本没变。")]),s._v(" "),a("li",[s._v("所以css要使用contenthash，只与自身内容有关，无视被哪个js模块引用。")])])]),s._v(" "),a("li",[s._v("Images/Fonts的指纹设置'[name][hash:8].[ext]', 注意，图片字体的hash与和css或js的hash概念不一样，是按内容生成的，不是按编译生成的。")])])]),s._v(" "),a("h2",{attrs:{id:"持久化缓存caching-注意id问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久化缓存caching-注意id问题"}},[s._v("#")]),s._v(" 持久化缓存caching（注意id问题）")]),s._v(" "),a("ul",[a("li",[s._v("本质上就是通过指定："),a("code",[s._v("output.filename: '[name].[chunkhash].js'")]),s._v("，因为"),a("code",[s._v("[chunkhash]")]),s._v("是内容相关的，只要内容发生了改变，构建后文件名的 hash 就会发生改变。")]),s._v(" "),a("li",[s._v("再配合代码分割：将vendor.js单独打包。因为它们是不太可能频繁发生改变的，所以无需多次加载这些模块。")]),s._v(" "),a("li",[s._v("最后注意模块id变化问题：\n"),a("ul",[a("li",[s._v("默认情况下，异步模块id是计数器递增的，但这样有问题，如果在中间增加了新模块，那么之后所有模块的 ID 都会被改变，但其实它们的内容没变。")]),s._v(" "),a("li",[s._v("可以使用 "),a("code",[s._v("HashedModuleIdsPlugin")]),s._v(" 插件来改变模块 ID 的计算方式。这个插件用模块路径的哈希值代替了基于计数器的 ID：")])])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack.config.js")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HashedModuleIdsPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("编译输出：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[3IRH] ./index.js 29 kB {1} [built]\n[DuR2] (webpack)/buildin/global.js 488 bytes {2} [built]\n[JkW7] (webpack)/buildin/module.js 495 bytes {2} [built]\n[LbCc] ./webPlayer.js 24 kB {1} [built]\n[lebJ] ./comments.js 58 kB {0} [built]\n[02Tr] ./ads.js 74 kB {1} [built]\n    + 1 hidden module\n")])])]),a("h4",{attrs:{id:"如何将文件名发送到浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何将文件名发送到浏览器"}},[s._v("#")]),s._v(" 如何将文件名发送到浏览器")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("HtmlWebpackPlugin")]),s._v(" 或者 "),a("code",[s._v("WebpackManifestPlugin")]),s._v("：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("HtmlWebpackPlugin")]),s._v("：是一个简单但扩展性不强的插件。在编译期间，它会生成一个 HTML 文件，文件包含了所有已经被编译的资源。")])]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- index.html --\x3e")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<!")]),a("span",{pre:!0,attrs:{class:"token name"}},[s._v("doctype")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[s._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- ... --\x3e")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("bundle.8e0d62a03.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("WebpackManifestPlugin")]),s._v("：是一个扩展性更佳的插件。在打包时，它会生成一个 JSON 文件，里面包含了原文件名和带哈希文件名的映射。在服务端，通过这个 JSON 就能方便的找到我们真正要执行的文件。")])]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// manifest.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bundle.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bundle.8e0d62a03.js"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b9b0fdfe51d450e7210892d#heading-16",target:"_blank",rel:"noopener noreferrer"}},[s._v("【译】Google - 使用 webpack 进行 web 性能优化（二）：利用好持久化缓存"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://doc.webpack-china.org/concepts",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);