(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{774:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jsbridge原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsbridge原理"}},[t._v("#")]),t._v(" JSBridge原理")]),t._v(" "),s("h2",{attrs:{id:"什么是jsbridge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是jsbridge"}},[t._v("#")]),t._v(" 什么是JSBridge")]),t._v(" "),s("p",[t._v("Hybird APP基本90%以上都是H5。由于H5页面是内嵌到原生应用的WebView中的，手机浏览器Javascript引擎是在一个沙箱环境中运行，因此JavaScript的权限受到严格限制。如果JavaScript要用到这些受限的能力时，就需要委托原生去实现，原生完成后，再将结果通知JavaScript。这就需要一个通信的桥梁，JSBridge。")]),t._v(" "),s("p",[t._v("JSBridge是一种"),s("strong",[t._v("H5页面与Native之间「异步双向」的通信方式")]),t._v("。任何一个移动操作系统中都包含可运行 JavaScript 的容器，即一个单独的 JS Context 中（例如，"),s("em",[t._v("WebView 的 Webkit 引擎")]),t._v("、"),s("em",[t._v("JSCore")]),t._v("）。")]),t._v(" "),s("h2",{attrs:{id:"动态化技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态化技术"}},[t._v("#")]),t._v(" 动态化技术")]),t._v(" "),s("p",[t._v("目前动态化的技术主要有四种：")]),t._v(" "),s("ul",[s("li",[t._v("热补丁")]),t._v(" "),s("li",[t._v("混合开发框架（RN、Weex等）")]),t._v(" "),s("li",[t._v("纯粹的Web APP")]),t._v(" "),s("li",[t._v("原生加H5的Hybrid（需要经常更新的部分用H5实现）。")])]),t._v(" "),s("p",[t._v("其中热补丁技术主要用于修复一些线上bug，不用于主流开发。剩余的三种方案，都是通过Javascript 和原生配合实现的，而它们都用到了 JsBridge。")]),t._v(" "),s("h2",{attrs:{id:"jsbridge原理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsbridge原理-2"}},[t._v("#")]),t._v(" JSBridge原理")]),t._v(" "),s("p",[t._v("JSBridge 要实现的主要逻辑是两点（可以把这个流程类比成 JSONP 的流程）：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("1. 通信调用（Native 与 JS 通信）")])]),t._v(" "),s("li",[s("strong",[t._v("2. 句柄解析调用")])])]),t._v(" "),s("p",[t._v("以 Hybrid 方案为例：")]),t._v(" "),s("h3",{attrs:{id:"一、javascript-调用-native"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、javascript-调用-native"}},[t._v("#")]),t._v(" 一、JavaScript 调用 Native")]),t._v(" "),s("p",[t._v("主要有两种方式："),s("code",[t._v("注入 API")]),s("strong",[t._v("（推荐）")]),t._v(" 和 "),s("code",[t._v("拦截 URL SCHEME")])]),t._v(" "),s("h4",{attrs:{id:"_1、注入-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、注入-api"}},[t._v("#")]),t._v(" 1、"),s("code",[t._v("注入 API")])]),t._v(" "),s("p",[s("code",[t._v("注入 API")]),t._v("：使用 Native的API（暂且称它为defineFunc函数），通过 WebView 提供的接口，向 JavaScript 的 Context（window）中注入对象或者方法，让 JavaScript 调用时，直接执行相应的 Native 代码逻辑，达到 JavaScript 调用 Native 的目的。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// define 翻译过来大概就是下面的这个意思")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineFunc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("funcName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" window "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" webView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过一些Native的API拿到WebView的window")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("funcName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的func 是Native的func，执行的是纯Native的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Native")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineFunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'callSomeNativeFunction'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这些是由Native的代码翻译成javascript的伪代码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/path/to/file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 做一些H5做不到的事情")]),t._v("\n    file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/path/to/file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2、拦截-url-scheme"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、拦截-url-scheme"}},[t._v("#")]),t._v(" 2、"),s("code",[t._v("拦截 URL SCHEME")])]),t._v(" "),s("p",[s("code",[t._v("拦截 URL SCHEME")]),t._v("：Web 端通过某种方式（例如 "),s("code",[t._v("iframe.src")]),t._v("）发送 URL Scheme 请求，之后 Native 拦截到请求并根据 URL SCHEME（包括所带的参数）进行相关操作。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("解释一下 URL SCHEME")]),t._v(" "),s("p",[s("strong",[t._v("URL SCHEME")]),t._v("是一种类似于url的链接，是为了方便app直接互相调用设计的，形式和普通的 url 近似，主要区别是 protocol 和 host 一般是自定义的，例如: qunarhy://hy/url?url=ymfe.tech，protocol 是 qunarhy，host 则是 hy。")])]),t._v(" "),s("p",[t._v("这种方式在实践中存在两个缺陷：")]),t._v(" "),s("ul",[s("li",[t._v("使用 iframe.src 发送 URL SCHEME 会有 url 长度的隐患。")]),t._v(" "),s("li",[t._v("创建请求，需要一定的耗时，比注入 API 的方式调用同样的功能，耗时会较长。")])]),t._v(" "),s("p",[t._v("而之所以以前很多方案采用这种「"),s("code",[t._v("拦截 URL SCHEME")]),t._v("」的方式，是因为它支持iOS6。。但如今不推荐再为了市场占比很小的iOS6而是用这种不优雅的方式了。")]),t._v(" "),s("ul",[s("li",[t._v("其实可以想到三种发请求的方式：\n"),s("ul",[s("li",[t._v("使用带有src属性标签发送请求，如iframe...")]),t._v(" "),s("li",[t._v("使用location.href发送请求")]),t._v(" "),s("li",[t._v("使用Ajax的方式来发送请求")])])]),t._v(" "),s("li",[t._v("【注1】：有些方案为了规避 url 长度隐患的缺陷，在 iOS 上采用了使用 Ajax 发送同域请求的方式，并将参数放到 head 或 body 里。这样，虽然规避了 url 长度的隐患，但是 WKWebView 并不支持这样的方式。")]),t._v(" "),s("li",[t._v("【注2】：为什么选择 iframe.src 不选择 locaiton.href ？因为如果通过 location.href 连续调用 Native，很容易丢失一些调用。")])]),t._v(" "),s("h3",{attrs:{id:"二、native-调用-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、native-调用-javascript"}},[t._v("#")]),t._v(" 二、Native 调用 JavaScript")]),t._v(" "),s("p",[t._v("Native 调用 JavaScript，其实就是"),s("code",[t._v("执行拼接 JavaScript 字符串")]),t._v("，从外部调用 JavaScript 中的方法，因此 JavaScript 的方法"),s("code",[t._v("必须在全局的 window 上")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"代码实现-注入-api-执行拼接-javascript-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-注入-api-执行拼接-javascript-字符串"}},[t._v("#")]),t._v(" 代码实现（注入 API + 执行拼接 JavaScript 字符串）")]),t._v(" "),s("h3",{attrs:{id:"javascript端-jsbridge-的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript端-jsbridge-的实现"}},[t._v("#")]),t._v(" JavaScript端 JSBridge 的实现")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只是一个示例，主要用于剖析 JSBridge 的原理和流程，里面存在诸多省略和不完善的代码逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        callbacks "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        registerFuncs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JSBridge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 Native")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断环境，获取不同的 nativeBridge")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" thisId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取唯一 id")]),t._v("\n            callbacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("thisId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储 Callback")]),t._v("\n            nativeBridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                bridgeName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                callbackId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" thisId "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传到 Native 端")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("receiveMessage")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bridgeName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                callbackId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Native 将 callbackId 原封不动传回")]),t._v("\n                responstId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responstId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体逻辑")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bridgeName 和 callbackId 不会同时存在")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callbackId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到相应句柄")]),t._v("\n                    callbacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callbackId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行调用")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("elseif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("bridgeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registerFuncs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 bridgeName 找到句柄")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    registerFuncs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                            flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                            ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        nativeBridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回调 Native")]),t._v("\n                            responstId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" responstId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            ret"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ret\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registerFuncs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                registerFuncs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            registerFuncs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bridgeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储回调")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"native端-jsbridge-的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#native端-jsbridge-的实现"}},[t._v("#")]),t._v(" Native端 JSBridge 的实现")]),t._v(" "),s("p",[t._v("Native 端配合实现 JSBridge：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("JavaScript 调用 Native 逻辑")])])]),t._v(" "),s("p",[t._v("主要的代码逻辑是：接收到 JavaScript 消息 => 解析参数，拿到 bridgeName、data 和 callbackId => 根据 bridgeName 找到功能方法，以 data 为参数执行 => 执行返回值和 callbackId 一起回传前端。 Native 调用 JavaScript 也同样简单，直接自动生成一个唯一的 ResponseId，并存储句柄，然后和 data 一起发送给前端即可。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Native 调用 JavaScript")])])]),t._v(" "),s("p",[t._v("直接自动生成一个唯一的 ResponseId，并存储句柄，然后和 data 一起发送给前端即可。")]),t._v(" "),s("h2",{attrs:{id:"jsbridge-如何引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsbridge-如何引用"}},[t._v("#")]),t._v(" JSBridge 如何引用")]),t._v(" "),s("p",[t._v("对于 JSBridge 的引用，常用有两种方式，各有利弊：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("由 Native 端进行注入")]),t._v("，注入方式和 Native 调用 JavaScript 类似，直接执行桥的全部代码。")]),t._v(" "),s("ul",[s("li",[t._v("它的优点在于：桥的版本很容易与 Native 保持一致，Native 端不用对不同版本的 JSBridge 进行兼容；")]),t._v(" "),s("li",[t._v("它的缺点是：注入时机不确定，需要实现注入失败后重试的机制，保证注入的成功率，同时 JavaScript 端在调用接口时，需要优先判断 JSBridge 是否已经注入成功。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("由 JavaScript 端引用")]),t._v("，直接与 JavaScript 一起执行。这与由 Native 端注入正好相反：")]),t._v(" "),s("ul",[s("li",[t._v("它的优点在于：JavaScript 端可以确定 JSBridge 的存在，直接调用即可；")]),t._v(" "),s("li",[t._v("缺点是：如果桥的实现方式有更改，JSBridge 需要兼容多版本的 Native Bridge 或者 Native Bridge 兼容多版本的 JSBridge。")])])])]),t._v(" "),s("h2",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.im/post/5abca877f265da238155b6bc",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSBridge的原理"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5d425a16f265da03f564c1c3",target:"_blank",rel:"noopener noreferrer"}},[t._v("【前端基础】Web与Native交互之The JSBridge FAQ"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);