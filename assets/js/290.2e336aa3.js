(window.webpackJsonp=window.webpackJsonp||[]).push([[290],{876:function(t,e,a){"use strict";a.r(e);var r=a(14),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react-组件分类-不同角度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-组件分类-不同角度"}},[t._v("#")]),t._v(" React 组件分类（不同角度）")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/uncontrolled-components.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("非受控组件"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6858276396968951822#heading-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("受控和非受控组件真的那么难理解吗？(React 实际案例详解)"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"函数组件与类组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数组件与类组件"}},[t._v("#")]),t._v(" 函数组件与类组件")]),t._v(" "),a("p",[t._v("传送门："),a("RouterLink",{attrs:{to:"/Question-Bank/react/element-component-instance-node.html#react组件-分3类（函数组件与类组件）"}},[t._v("函数组件与类组件")])],1),t._v(" "),a("h2",{attrs:{id:"有状态组件与无状态组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件与无状态组件"}},[t._v("#")]),t._v(" 有状态组件与无状态组件")]),t._v(" "),a("p",[t._v("传送门："),a("RouterLink",{attrs:{to:"/Question-Bank/react/element-component-instance-node.html#构建-react组件-的方法（3种：包括有状态与无状态组件）"}},[t._v("有状态与无状态组件")])],1),t._v(" "),a("h2",{attrs:{id:"受控组件与非受控组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#受控组件与非受控组件"}},[t._v("#")]),t._v(" \b 受控组件与非受控组件")]),t._v(" "),a("h3",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("受控组件")]),t._v("：受控组件是在 React 中处理输入表单的一种技术。表单元素通常维护它们自己的状态，而 react 则在组件的状态属性中维护状态。我们可以将两者结合起来控制输入表单。这称为受控组件。因此，在受控组件表单中，数据由 React 组件处理。大多数情况下，"),a("strong",[t._v("建议使用受控组件")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("非受控组件")]),t._v("：有一种称为非受控组件的方法可以通过使用 Ref 来处理表单数据。在非受控组件中，Ref 用于直接从 DOM 访问表单值，而不是事件处理程序。")])]),t._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("受控组件")]),t._v(" "),a("th",[t._v("非受控组件")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1. 没有维持自己的状态")]),t._v(" "),a("td",[t._v("1. 保持着自己的状态")])]),t._v(" "),a("tr",[a("td",[t._v("2. 数据由父组件控制")]),t._v(" "),a("td",[t._v("2. "),a("code",[t._v("数据保存在 DOM 中")])])]),t._v(" "),a("tr",[a("td",[t._v("3. "),a("strong",[t._v("通过 props 获取当前值，然后通过回调通知更改")])]),t._v(" "),a("td",[t._v("3. "),a("strong",[t._v("通过 refs 来操作真实的 DOM，获取其当前值")])])])])]),t._v(" "),a("h3",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[t._v("官方：绝大部分时候推荐使用受控组件来实现表单，因为在受控组件中，因为状态由 React 掌控，可以基于组件重渲实时控制做操作；如果选择非受控组件的话，表单数据就由 DOM 本身处理。但对于 file 标签，只能使用非受控组件。")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("特殊的文件 file 标签")]),t._v(" "),a("p",[t._v("在 input 中还有一个比较特殊的情况，那就是 "),a("strong",[t._v("file 类型的表单控件")]),t._v("。")]),t._v(" "),a("p",[t._v("对于 file 类型的表单控件它始终是一个不受控制的组件，"),a("code",[t._v("因为它的值只能由用户设置，而不是以编程方式设置")]),t._v("。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);