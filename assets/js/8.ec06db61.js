(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{509:function(t,a,s){t.exports=s.p+"assets/img/cross-domain-1-01.6ae9fa24.png"},510:function(t,a,s){t.exports=s.p+"assets/img/jsonp.d44fea0f.png"},511:function(t,a,s){t.exports=s.p+"assets/img/hash.959b4c27.png"},512:function(t,a,s){t.exports=s.p+"assets/img/postMessage.c3b2fa57.png"},513:function(t,a,s){t.exports=s.p+"assets/img/webSocket.90b8f84c.png"},819:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"跨域通信与同源策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域通信与同源策略"}},[t._v("#")]),t._v(" 跨域通信与同源策略")]),t._v(" "),n("h2",{attrs:{id:"什么是同源策略及限制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是同源策略及限制"}},[t._v("#")]),t._v(" 什么是同源策略及限制？")]),t._v(" "),n("ul",[n("li",[t._v("只要"),n("code",[t._v("协议、域名、端口")]),t._v("有任何一个不同，都被当作是不同的源，即属于不同的域。不是同一个源的文档，不能获取和操作另一个源的文档。")]),t._v(" "),n("li",[t._v("注意：http与https也视作不同协议，www.A.com与news.A.com属于子域不同，域名与其对应IP也算不同域名，这都是跨域。")]),t._v(" "),n("li",[t._v("限制主要表现在：Cookie、localStorage和IndexDB无法读取；Dom无法获得；Ajax请求不能发送。")])]),t._v(" "),n("h2",{attrs:{id:"前后端通信方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前后端通信方式"}},[t._v("#")]),t._v(" 前后端通信方式")]),t._v(" "),n("ul",[n("li",[t._v("Ajax：同源下的通信方式")]),t._v(" "),n("li",[t._v("WebSocket：不受同源策略的限制")]),t._v(" "),n("li",[t._v("CORS：支持同源也支持不同源通信，也是当前最常用的跨域通信策略")]),t._v(" "),n("li",[t._v("fetch：Ajax的替代方案，语法简洁语义化，基于标准Promise实现，链式调用，支持async/await"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/some/url'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    method"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error 处理，等价于then的第二个参数，但更直观好用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),n("h4",{attrs:{id:"ajax与fetch区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax与fetch区别"}},[t._v("#")]),t._v(" Ajax与fetch区别")]),t._v(" "),n("ul",[n("li",[t._v("fetch只对网络请求报错，对400，500都当做成功的请求，需要封装去处理。")]),t._v(" "),n("li",[t._v("fetch默认在服务端不会发送或接收任何 cookies，如果想要在同域中自动发送cookie，加上"),n("code",[t._v("credentials")]),t._v("的"),n("code",[t._v("same-origin")]),t._v("选项：")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  credentials"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'same-origin'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same-origin值使得fetch处理Cookie与XMLHttpRequest类似。 否则，Cookie将不会被发送，导致这些请求不保留认证会话。")]),t._v("\n")])])]),n("ul",[n("li",[t._v("fetch没有办法原生监测请求的进度，而XHR可以。")])]),t._v(" "),n("h4",{attrs:{id:"如何创建ajax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何创建ajax"}},[t._v("#")]),t._v(" 如何创建Ajax？")]),t._v(" "),n("p",[t._v("考察点：XHR对象的工作流程、兼容性处理、事件的触发条件、事件的触发顺序")]),t._v(" "),n("p",[n("img",{attrs:{src:s(509),alt:"创建Ajax"}})]),t._v(" "),n("h2",{attrs:{id:"常用跨域策略-8种"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用跨域策略-8种"}},[t._v("#")]),t._v(" 常用跨域策略（8种）")]),t._v(" "),n("p",[t._v("现在常用主流方式是 CORS 及 使用代理，当然 JSONP 也是经典的方法。")]),t._v(" "),n("h3",{attrs:{id:"_1、cors-跨域资源共享"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、cors-跨域资源共享"}},[t._v("#")]),t._v(" 1、CORS（跨域资源共享）")]),t._v(" "),n("ul",[n("li",[t._v("支持跨域ajax的通信标准。原理是"),n("code",[t._v("浏览器在识别ajax发送了跨域请求的时候，会将其拦截并在http头中加一个origin字段，允许跨域通信")]),t._v("。")]),t._v(" "),n("li",[t._v("整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。")])]),t._v(" "),n("p",[t._v("详情跳转传送门："),n("a",{attrs:{href:"/Roundtable/Question-Bank/communication/cors"}},[t._v("CORS 跨域资源共享")])]),t._v(" "),n("h3",{attrs:{id:"_2、服务端代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、服务端代理"}},[t._v("#")]),t._v(" 2、服务端代理")]),t._v(" "),n("ul",[n("li",[t._v("通过nginx反向代理或者nodejs代理请求，原理就是"),n("code",[t._v("服务端是不受浏览器的同源策略限制的")]),t._v("，因此可通过服务端先请求好资源，再从服务端拿来用。")]),t._v(" "),n("li",[t._v("在开发环境下可以使用webpack 的 "),n("code",[t._v("http-proxy-middleware")]),t._v("中间件，在"),n("code",[t._v("devServer配置proxy: config.dev.proxyTable")]),t._v("实现代理跨域。")])]),t._v(" "),n("h3",{attrs:{id:"_3、jsonp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、jsonp"}},[t._v("#")]),t._v(" 3、JSONP")]),t._v(" "),n("ul",[n("li",[t._v("JSONP："),n("code",[t._v("利用script标签的异步加载来实现")]),t._v("。所有网站的js的地址和网站域名是不一致的，跨源了但是不影响js的加载。")]),t._v(" "),n("li",[t._v("JSONP的要点是："),n("strong",[t._v("允许客户端传一个callback参数给服务器，然后服务器返回数据时会用这个"),n("code",[t._v("callback参数作为函数名，包裹住JSON数据")]),t._v("，返回客户端，客户端执行返回函数")]),t._v("。")]),t._v(" "),n("li",[t._v("凡是拥有“src”属性的标签都拥有跨域的能力，如"),n("code",[t._v("<script>,<img>,<iframe>")]),t._v("等。")]),t._v(" "),n("li",[t._v("Jsonp只能发"),n("code",[t._v("get请求")]),t._v("。")])]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("封装实现JSONP")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现JSONP")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callbackKey "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义本地的唯一callbackId，若是没有的话则初始化为1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把要执行的回调加入到JSON对象中，避免污染window")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" callbackId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callbackId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callbackKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("JSONP.callbacks[")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callbackId"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把设定的函数名称放入到参数中，'cb=JSONP.callbacks[1]'")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" paramString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("paramString"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// id自增，保证唯一")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSONP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8080/api/jsonp'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    params"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    callbackKey"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:s(510),alt:"jsonp示例"}})]),t._v(" "),n("h3",{attrs:{id:"_4、hash"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、hash"}},[t._v("#")]),t._v(" 4、Hash")]),t._v(" "),n("p",[t._v("利用的原理是“"),n("code",[t._v("hash的变动不会触发页面刷新")]),t._v("”。\n具体做法：")]),t._v(" "),n("ol",[n("li",[t._v("主页面A中嵌入iframeB，两个来自不同域；")]),t._v(" "),n("li",[t._v("在主页面A中，将想要传递给B的字段，作为hash，将它与B的url连接起来，然后将B的src设置为连接后的url；")]),t._v(" "),n("li",[t._v("在iframeB中，就可以通过获取自己url的hash值，从而得到主页面传递的值。在iframeB中，通过监听window.onhashchange事件来获取A页面传来的字段。")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(511),alt:"hash跨域示例"}})]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("补充小知识点：怎么避免自己的页面被iframe嵌套（3种）")]),t._v(" "),n("ol",[n("li",[t._v("在head中设置meta属性 "),n("code",[t._v("X-Frame-Options")]),t._v("："),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("X-Frame-Options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("SAMEORIGIN / DENY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("DENY")]),t._v("：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。")]),t._v(" "),n("li",[n("code",[t._v("SAMEORIGIN")]),t._v("：表示该页面可以在相同域名页面的 frame 中展示。")]),t._v(" "),n("li",[t._v("另外还有一个选项，ALLOW-FROM uri：表示该页面可以在指定来源的 frame 中展示。")])])]),t._v(" "),n("li",[t._v("使用JS代码控制\n前端检测 top 窗口是否就是 self ：")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　　　top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("服务器中设置拦截\n配置 nginx 发送 X-Frame-Options 响应头，把下面这行添加到 'http', 'server' 或者 'location' 的配置中:")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("add_header X-Frame-Options SAMEORIGIN\n")])])])]),t._v(" "),n("h3",{attrs:{id:"_5、postmessage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、postmessage"}},[t._v("#")]),t._v(" 5、postMessage")]),t._v(" "),n("p",[t._v("HTML5规范中的新方法"),n("code",[t._v("window.postMessage()")]),t._v("可以用于安全跨域通信。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(512),alt:"postMessage跨域示例"}})]),t._v(" "),n("h3",{attrs:{id:"_6、websocket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、websocket"}},[t._v("#")]),t._v(" 6、WebSocket")]),t._v(" "),n("ul",[n("li",[t._v("HTTP 协议有一个缺陷，即通信只能由客户端发起。这对于服务器有连续状态变化的场景，就只能使用低效的“轮询”。")]),t._v(" "),n("li",[t._v("WebSocket是一种服务器推送技术，支持双向通信，可向客户端推送信息，实时性更强。"),n("code",[t._v("没有同源限制，即允许跨域")]),t._v("。协议标识符是"),n("code",[t._v("ws")]),t._v("（如果加密，则为wss）。")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(513),alt:"WebSocket跨域示例"}})]),t._v(" "),n("h3",{attrs:{id:"_7、document-domain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、document-domain"}},[t._v("#")]),t._v(" 7、document.domain")]),t._v(" "),n("ul",[n("li",[t._v("适用于：主域相同子域不同的页面。")]),t._v(" "),n("li",[t._v("方法：将这两个页面的document.domain设置为相同的父域名，即可实现不同子域名之间的跨域通信")])]),t._v(" "),n("h3",{attrs:{id:"_8、window-name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8、window-name"}},[t._v("#")]),t._v(" 8、window.name")]),t._v(" "),n("p",[t._v("window对象有个name属性，该属性有个特征：即在一个窗口的生命周期内，窗口载入的所有的页面都是共享一个window.name的，每个页面对window.name都有读写的权限，window.name是持久存在一个窗口载入过的所有页面中的。")])])}),[],!1,null,null,null);a.default=e.exports}}]);