(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{630:function(t,e,a){"use strict";a.r(e);var r=a(14),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构-堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-堆"}},[t._v("#")]),t._v(" 数据结构-堆")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:""}},[t._v("根据字符出现频率排序")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/super-ugly-number/",target:"_blank",rel:"noopener noreferrer"}},[t._v("超级丑数"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"堆的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆的概念"}},[t._v("#")]),t._v(" 堆的概念")]),t._v(" "),a("p",[t._v("堆，一种特殊的二叉树，需满足如下两个条件：")]),t._v(" "),a("ul",[a("li",[t._v("1、必须是完全二叉树（除了最后一层，所有层的节点数达到最大，与此同时，最后一层的所有节点都在最左侧）")]),t._v(" "),a("li",[t._v("2、任一节点的值是其子树所有结点的最大值或最小值")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("      56\n     /  \\\n   19    40\n  /\\     /\n18  9   3\n    最大堆\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("      5\n     /  \\\n   16    30\n  /\\     /\n50  18   38\n    最小堆\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);