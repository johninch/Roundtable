(window.webpackJsonp=window.webpackJsonp||[]).push([[280],{857:function(v,t,e){"use strict";e.r(t);var _=e(14),a=Object(_.a)({},(function(){var v=this,t=v.$createElement,e=v._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"完成一个cli工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完成一个cli工具"}},[v._v("#")]),v._v(" 完成一个CLI工具")]),v._v(" "),e("h2",{attrs:{id:"目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[v._v("#")]),v._v(" 目标")]),v._v(" "),e("ul",[e("li",[v._v("完成一个CLI工具")]),v._v(" "),e("li",[v._v("尤大神推荐的no webpack工具vite")]),v._v(" "),e("li",[v._v("Node的替代者Deno")])]),v._v(" "),e("h2",{attrs:{id:"为什么前端还要学node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么前端还要学node"}},[v._v("#")]),v._v(" 为什么前端还要学Node")]),v._v(" "),e("ul",[e("li",[v._v("更好认识：跨域、Token鉴权、Restful、Xss和CSRF")]),v._v(" "),e("li",[v._v("如何只用JS开发一个全栈应用")]),v._v(" "),e("li",[v._v("如何实现像Nuxt那样的约定路由功能？约定菜单是否可行？")])]),v._v(" "),e("h3",{attrs:{id:"学习node的目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习node的目标"}},[v._v("#")]),v._v(" 学习Node的目标")]),v._v(" "),e("ul",[e("li",[v._v("优秀的前端：可以和后端有效沟通")]),v._v(" "),e("li",[v._v("敏捷的全栈：快速开发全栈应用")]),v._v(" "),e("li",[v._v("架构师：践行工程化思想")])]),v._v(" "),e("h3",{attrs:{id:"web应用阶段划分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web应用阶段划分"}},[v._v("#")]),v._v(" Web应用阶段划分")]),v._v(" "),e("ul",[e("li",[v._v("后端模板 JSP、ASP、PHP")]),v._v(" "),e("li",[v._v("前后端分离 Jquery")]),v._v(" "),e("li",[v._v("工程化 ng webpack gulp")]),v._v(" "),e("li",[v._v("全栈时代")]),v._v(" "),e("li",[v._v("云 + 端时代 - 体验 微信云开发serverless")])]),v._v(" "),e("h2",{attrs:{id:"vite简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite简介"}},[v._v("#")]),v._v(" Vite简介")]),v._v(" "),e("ul",[e("li",[v._v("跟随Vue3.0一起发布的高效开发服务器\n"),e("ul",[e("li",[v._v("vite是一个机遇Vue3单文件组件的非打包开发服务器。随Vue3一起推出。特点是快捷高效，无需webpack支持。为未来的前端工程化提供了另外一种可能。")])])])]),v._v(" "),e("p",[v._v("其实在浏览器中可以直接使用ES6的import的功能来加载的，只是webpack做的太好了，导致这个点被忽略了。")]),v._v(" "),e("p",[v._v("Vite，一个机遇浏览器原生 ES imports 的开发服务器。利用浏览器去解析imports，在服务器端按需编译返回，完全跳过了打包这个概念，服务器随起随用。\n同时，不仅有Vue文件支持，还搞定了热更新，而且热更新的速度不会随着模块增多而变慢。\n针对生成环境则可以把同一份代码用rollup打包。虽然现在还比较粗糙，但这个防线我觉得是有潜力的，做得好可以彻底解决改一行代码等半天热更新的问题。")]),v._v(" "),e("ul",[e("li",[v._v("特点\n"),e("ul",[e("li",[v._v("建议http服务器")]),v._v(" "),e("li",[v._v("无需webpack\n"),e("ul",[e("li",[v._v("vue文件直接渲染")]),v._v(" "),e("li",[v._v("热更新")])])]),v._v(" "),e("li",[v._v("原生 ES import")]),v._v(" "),e("li",[v._v("抛弃打包概念")]),v._v(" "),e("li",[v._v("支持vue文件")]),v._v(" "),e("li",[v._v("支持热更新")])])])]),v._v(" "),e("h2",{attrs:{id:"deno"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deno"}},[v._v("#")]),v._v(" Deno")]),v._v(" "),e("p",[v._v("Deno是由Node的发明人Ryan Dahl编写的下一代服务器端运行时环境。")])])}),[],!1,null,null,null);t.default=a.exports}}]);