(window.webpackJsonp=window.webpackJsonp||[]).push([[287],{875:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"无状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无状态组件"}},[t._v("#")]),t._v(" 无状态组件")]),t._v(" "),s("h2",{attrs:{id:"无状态-vs-有状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无状态-vs-有状态"}},[t._v("#")]),t._v(" 无状态 VS 有状态")]),t._v(" "),s("h3",{attrs:{id:"无状态组件-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无状态组件-2"}},[t._v("#")]),t._v(" 无状态组件")]),t._v(" "),s("p",[t._v("无状态函数式组件（Stateless Functional Component, SFC），顾名思义，无状态，也就是你无法使用State、生命周期方法，这就决定了函数组件都是展示性组件，接收Props，渲染DOM，而不关注其他逻辑。")]),t._v(" "),s("ul",[s("li",[t._v("写法上只需要return react元素即可，没有render()。")]),t._v(" "),s("li",[t._v("使用上组件内部没有this,内部可以使用ref,外部无法使用ref")])]),t._v(" "),s("h4",{attrs:{id:"组件上不支持-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件上不支持-ref"}},[t._v("#")]),t._v(" 组件上不支持 "),s("code",[t._v("ref")])]),t._v(" "),s("p",[t._v('无状态组件不支持 "ref"。原因很简单，因为在 React 调用到无状态组件的方法之前，是'),s("strong",[t._v('没有一个实例化的过程的，因此也就没有所谓的 "ref"')]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-jsx harmony extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SquareButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nodeDom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组价内部可以使用ref")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("square"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" nodeDom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SquareButton")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ❌❌无法使用ref获取组件实例")]),t._v("\n")])])]),s("h4",{attrs:{id:"声明方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明方式"}},[t._v("#")]),t._v(" 声明方式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，props需要传入。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SquareButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button className"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"square"')]),t._v(" onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只需要return element即可，没有render()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当然也可以直接通过箭头函数")]),t._v("\n")])])]),s("h3",{attrs:{id:"无状态组件调用方式差别-组件式调用、函数式调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无状态组件调用方式差别-组件式调用、函数式调用"}},[t._v("#")]),t._v(" 无状态组件"),s("code",[t._v("调用方式差别")]),t._v("：组件式调用、函数式调用")]),t._v(" "),s("blockquote",[s("p",[t._v("假定已知 Demo组件 为无状态组件。父组件调用方式如下：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式一：组件式调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Demo someProps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式二：函数式调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("someProps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("差别")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("首先明确一点，因为无状态组件只是一个方法而没有生命周期和state，所以相比于有状态组件来说性能更高；")]),t._v(" "),s("li",[t._v("但如果以 "),s("code",[t._v("组件式调用")]),t._v(" 无状态组件的话，性能的提高不明显可以忽略不计；这是因为以"),s("code",[t._v("组件式调用")]),t._v("，React会调用 createElement()生成这个无状态组件，还是会执行创建元素，挂载等等。")]),t._v(" "),s("li",[t._v("无状态组件真正的性能提升，是以 "),s("code",[t._v("函数式调用")]),t._v(" 时，此时React会直接以一个function替代createElement()，也就不会执行创建元素和挂载，因此性能可大幅度提升！")])]),t._v(" "),s("h3",{attrs:{id:"有状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件"}},[t._v("#")]),t._v(" 有状态组件")]),t._v(" "),s("p",[t._v("在无状态组件的基础上，如果组件内部包含状态（state）且状态随着事件或者外部的消息而发生改变的时候，这就构成了有状态组件（Stateful Component）。")]),t._v(" "),s("p",[t._v("有状态组件通常会带有生命周期（lifecycle），用以在不同的时刻触发状态的更新。")]),t._v(" "),s("h2",{attrs:{id:"purecomponent-vs-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent-vs-component"}},[t._v("#")]),t._v(" PureComponent VS Component")]),t._v(" "),s("p",[t._v("React15.3 中新加了一个 "),s("code",[t._v("PureComponent")]),t._v(" 类，它是优化 React 应用程序最重要的方法之一。")]),t._v(" "),s("p",[s("code",[t._v("PureComponent")]),t._v("的作用是"),s("strong",[t._v("可以用来提升性能")]),t._v("，因为它减少了应用中的渲染次数。特别是在无状态的简单组件（纯展示组件）上的性能可以高出 React.Component 几十倍，所以性能还是很可观的。")]),t._v(" "),s("p",[t._v("React."),s("code",[t._v("PureComponent")]),t._v(" 与 React.Component 几乎完全相同，只是因为对 "),s("code",[t._v("shouldComponentUpdate()")]),t._v("的处理不同，使得React."),s("code",[t._v("PureComponent")]),t._v("的性能更高。")]),t._v(" "),s("h3",{attrs:{id:"purecomponent原理-shallowequal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent原理-shallowequal"}},[t._v("#")]),t._v(" PureComponent原理（shallowEqual）")]),t._v(" "),s("ul",[s("li",[t._v("当定义了"),s("code",[t._v("shouldComponentUpdate()")]),t._v("时，React "),s("strong",[t._v("会直接使用 "),s("code",[t._v("shouldComponentUpdate()")]),t._v(" 的结果作为是否更新的依据")]),t._v("；")]),t._v(" "),s("li",[t._v("当没有定义"),s("code",[t._v("shouldComponentUpdate()")]),t._v("时，React 就会去判断是不是 "),s("code",[t._v("PureComponent")]),t._v("，如果是 "),s("code",[t._v("PureComponent")]),t._v("，会使用 "),s("code",[t._v("shallowEqual")]),t._v("(浅比较) 来实现"),s("code",[t._v("「比较更新」")]),t._v("。当组件更新时，如果组件的 props 和 state 都没发生改变，render 方法就不会触发，省去 Virtual DOM 的「生成」和「比对」过程，达到提升性能的目的。")])]),t._v(" "),s("p",[s("strong",[t._v("注意有个关键问题")]),t._v("：React.PureComponent 做了如下判断：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_compositeType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" CompositeTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PureClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  shouldUpdate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里的 shallowEqual 会比较 Object.keys(state | props) 的长度是否一致，每一个 key 是否两者都有，并且是否是一个引用，也就是"),s("code",[t._v("只比较了第一层的值")]),t._v("，确实很浅，所以"),s("code",[t._v("深层的嵌套数据是对比不出来的")]),t._v("。")]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[s("strong",[t._v("因此，虽然使用 PureComponent 可以少写 shouldComponentUpdate 函数，节省了点代码，但浅对比可能会在面对复杂数据结构时，没有办法正确判断深层的数据一致性，而导致界面得不到更新。")])])]),t._v(" "),s("h4",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/980abadd8a18",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reac系列之--无状态组件你真的知道吗？"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.lbinin.com/frontEnd/React/React-SFC.html#%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("React SFC 无状态组件及多种组件写法"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);