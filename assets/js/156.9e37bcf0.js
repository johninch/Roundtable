(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{696:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_7、eggjs-基于koa定制自己的企业级三层框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、eggjs-基于koa定制自己的企业级三层框架"}},[s._v("#")]),s._v(" 7、eggjs - 基于Koa定制自己的企业级三层框架")]),s._v(" "),t("h2",{attrs:{id:"课程目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#课程目标"}},[s._v("#")]),s._v(" 课程目标")]),s._v(" "),t("ul",[t("li",[s._v("如何实现一个「约定优于配置」的框架")]),s._v(" "),t("li",[s._v("在函数式编程中完成传值操作，就是进行「柯里化变换」")])]),s._v(" "),t("p",[s._v("router.js：\neggjs的三层结构：controller.js => service.js => model.js")]),s._v(" "),t("h2",{attrs:{id:"egg-js体验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#egg-js体验"}},[s._v("#")]),s._v(" Egg.js体验")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建项目")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i egg-init -g\negg-init egg --type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("simple\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" egg-example\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动项目")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run dev\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" localhost:7001\n")])])]),t("blockquote",[t("p",[s._v("约定优于配置(convention over configuration)，也称作 「按约定编程」是一种软件设计范式，旨在减少软件开发人员需做决定的数量，简单又不失灵活。")])]),s._v(" "),t("h4",{attrs:{id:"数据层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据层"}},[s._v("#")]),s._v(" 数据层")]),s._v(" "),t("p",[s._v("创建模型层：以mysql + sequelize为例演示数据持久化")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save egg-sequelize mysql2\n")])])]),t("p",[s._v("在 config/plugin.js 中引入 egg-sequelize 插件（"),t("code",[s._v("在eggjs中，所有功能都是以插件的形式存在的")]),s._v("）：")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[s._v("sequelize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    enable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    package"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'egg-sequelize'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("在 config/config.default.js 中编写 sequelize 配置：")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[s._v("  const userConfig = "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// myAppName: 'egg',")]),s._v("\n    sequelize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      dialect"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'mysql'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      host"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v("."),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v("'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      username"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'root'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      password"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'example'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      database"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'kaikeba'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(";\n")])])]),t("h2",{attrs:{id:"实现一个mvc框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现一个mvc框架"}},[s._v("#")]),s._v(" 实现一个MVC框架")]),s._v(" "),t("p",[s._v("进行很多柯里化变换，只为把值传进去。")]),s._v(" "),t("p",[s._v("为了传入参数app，而升阶，把对象改成函数。")]),s._v(" "),t("p",[s._v("中间件的加载，不宜使用「约定优于配置」这种思路，因为中间件是有顺序的，还是需要自己配置来控制")])])}),[],!1,null,null,null);a.default=n.exports}}]);