(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{588:function(t,a,e){t.exports=e.p+"assets/img/AST.db76b160.png"},589:function(t,a,e){t.exports=e.p+"assets/img/babel.b88ee172.png"},916:function(t,a,e){"use strict";e.r(a);var s=e(14),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"关于babel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于babel"}},[t._v("#")]),t._v(" 关于babel")]),t._v(" "),s("h2",{attrs:{id:"什么是babel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是babel"}},[t._v("#")]),t._v(" 什么是babel")]),t._v(" "),s("p",[t._v("Babel: The compiler for writing next generation JavaScript。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("babel")]),t._v("最开始的名字叫"),s("code",[t._v("6to5")]),t._v("，作用是把一些浏览器根本就不识别的代码，转换成浏览器识别的代码。")]),t._v(" "),s("li",[s("code",[t._v("babel")]),t._v(" 对于 "),s("code",[t._v("AST")]),t._v(" 就相当于 jQuery 对于 DOM, 就是说"),s("code",[t._v("babel")]),t._v("给予了我们便捷查询和修改 "),s("code",[t._v("AST")]),t._v(" 的能力。\n"),s("ul",[s("li",[t._v("抽象语法树("),s("code",[t._v("AST")]),t._v(" -> Abstract Syntax Tree)：将程序用树状结构表示出声明、变量、函数等等。"),s("strong",[t._v("是不同代码转换过程中的桥梁")]),t._v("。\n"),s("img",{attrs:{src:e(588),alt:"AST长什么样"}})])])])]),t._v(" "),s("h2",{attrs:{id:"_3步转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3步转换"}},[t._v("#")]),t._v(" 3步转换")]),t._v(" "),s("p",[t._v("为了转换代码，babel做了三件事：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Parser")]),t._v("：解析原有代码转换为AST。"),s("strong",[t._v("(code => 旧AST)")])]),t._v(" "),s("li",[s("code",[t._v("Transformer")]),t._v("：利用配置好的"),s("code",[t._v("plugins/presets")]),t._v("把"),s("code",[t._v("Parser")]),t._v("生成的AST转变为新的AST。"),s("strong",[t._v("（旧AST => 新AST）")])]),t._v(" "),s("li",[s("code",[t._v("Generator")]),t._v("：把转换后的新AST生成新的代码。"),s("strong",[t._v("（旧AST => code）")])])]),t._v(" "),s("p",[s("img",{attrs:{src:e(589),alt:"babel 3步转换"}})]),t._v(" "),s("h4",{attrs:{id:"parser-解析-步骤一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parser-解析-步骤一"}},[t._v("#")]),t._v(" Parser 解析（步骤一）")]),t._v(" "),s("p",[t._v("解析步骤接收代码并输出 AST,这其中又包含两个阶段"),s("strong",[t._v("词法分析")]),t._v("和"),s("strong",[t._v("语法分析")]),t._v("。词法分析阶段把字符串形式的代码转换为 令牌（tokens）流。语法分析阶段会把一个令牌流转换成 AST 的形式,方便后续操作。")]),t._v(" "),s("h4",{attrs:{id:"transformer生成-步骤二-重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transformer生成-步骤二-重点"}},[t._v("#")]),t._v(" Transformer生成（步骤二*重点）")]),t._v(" "),s("p",[t._v("babel的最主要工作都集中Transformer上，即在把解析生成的AST经过"),s("code",[t._v("plugins/presets")]),t._v("然后去生成新的AST。babel拿到抽象语法树后会使用"),s("strong",[t._v("babel-traverse")]),t._v("进行递归的"),s("strong",[t._v("深度优先树状遍历")]),t._v("，并按照特定配置规则完成转换。")]),t._v(" "),s("h4",{attrs:{id:"generator-生成-步骤三"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-生成-步骤三"}},[t._v("#")]),t._v(" Generator 生成（步骤三）")]),t._v(" "),s("p",[t._v("代码生成步骤把最终（经过一系列转换之后）的 AST 转换成字符串形式的代码，同时还会"),s("strong",[t._v("创建源码映射")]),t._v("（"),s("code",[t._v("source maps")]),t._v("）。代码生成其实很简单：深度优先遍历整个 AST，然后构建可以表示转换后代码的字符串。")]),t._v(" "),s("h2",{attrs:{id:"babel567的变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel567的变化"}},[t._v("#")]),t._v(" Babel567的变化")]),t._v(" "),s("h4",{attrs:{id:"babel分包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel分包"}},[t._v("#")]),t._v(" Babel分包")]),t._v(" "),s("ul",[s("li",[t._v("此前，Babel囊括了整个编译器、所有的转换器以及一个CLI工具，虽然方便使用，但缺点就是它会导致很多不必要的下载。")]),t._v(" "),s("li",[t._v("Babel6 不再是一个整体包了，它分为了两个单独的包（babel-cli 和 babel-core），此外还有一些插件预设（如babel-preset-es2015、babel-preset-react等）：")])]),t._v(" "),s("h4",{attrs:{id:"babel-core和babel-cli的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-core和babel-cli的区别"}},[t._v("#")]),t._v(" babel-core和babel-cli的区别")]),t._v(" "),s("ul",[s("li",[t._v("安装babel-cli，用于命令行转码")]),t._v(" "),s("li",[t._v("使用babel-core，在一个Node项目中使用Babel")])]),t._v(" "),s("h4",{attrs:{id:"声明作用域-babel-core"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明作用域-babel-core"}},[t._v("#")]),t._v(" 声明作用域@babel/core")]),t._v(" "),s("ul",[s("li",[t._v("在 Babel7 中 "),s("code",[t._v("babel-core")]),t._v(" 和 "),s("code",[t._v("babel-preset")]),t._v(" 被建议使用 "),s("code",[t._v("@babel")]),t._v(" 开头"),s("strong",[t._v("声明作用域")]),t._v("，因此应该分别下载 "),s("code",[t._v("@babel/core")]),t._v(" 和· "),s("code",[t._v("@babel/presets")]),t._v("。就类似于 vue-cli 升级后 使用@vue/cli一样的道理。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("@babel/core")]),t._v(" 这个库负责「"),s("code",[t._v("Parser解析")]),t._v("」，具体的「"),s("code",[t._v("Transformer转换")]),t._v("」和「"),s("code",[t._v("Generator生成")]),t._v("」步骤则交给各种插件（"),s("code",[t._v("plugin")]),t._v("）和预设（"),s("code",[t._v("preset")]),t._v("）来完成。")])])]),t._v(" "),s("h2",{attrs:{id:"babelrc-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babelrc-配置"}},[t._v("#")]),t._v(" .babelrc 配置")]),t._v(" "),s("ul",[s("li",[t._v("presets：官方的插件合集，官方推荐env，省略了前缀。")]),t._v(" "),s("li",[t._v("targets：说明你的web应用需要兼容到那一部分的浏览器。")]),t._v(" "),s("li",[t._v("plugins：一般会加上transform-runtime，自动帮你加载你需要的polyfill。")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .babelrc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debug"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"targets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"browsers"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"> 1%"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"last 3 versions"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not ie <= 9"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stage-2"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transform-runtime"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"presets-和-plugin-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#presets-和-plugin-的区别"}},[t._v("#")]),t._v(" presets 和 plugin 的区别")]),t._v(" "),s("p",[t._v("presets其实是一组plugin的集合：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myPreset"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel-preset-myPreset"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equivalent")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myPlugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel-plugin-myPlugin"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个插件实际是同一个")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注：前缀都是"),s("code",[t._v("babel-preset-")]),t._v("和"),s("code",[t._v("babel-plugin-")]),t._v("，可以省略这些前缀。")]),t._v(" "),s("h4",{attrs:{id:"env-和-es2015、es2016、es2017和-stage-x-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#env-和-es2015、es2016、es2017和-stage-x-的区别"}},[t._v("#")]),t._v(" env 和 es2015、es2016、es2017和 stage-x 的区别")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("env")]),t._v(" 同时包含了es2015、es2016、es2017以及最新版本，也是"),s("strong",[t._v("官方推荐的")]),t._v("。")]),t._v(" "),s("li",[t._v("es2015(ES6)会编译2015年通过javascript提案，成为正式版本的那一部分语法，以此类推。")]),t._v(" "),s("li",[s("code",[t._v("stage-x")]),t._v(" 会编译 "),s("strong",[t._v("试用和实验阶段的javascript提案")]),t._v("。\n"),s("ul",[s("li",[s("code",[t._v("一般在开发项目时会加上stage-2")]),t._v("：")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("TC39 将提案分为以下几个阶段:\n    Stage 0 - 稻草人: 只是一个想法，可能是 babel 插件。\n    Stage 1 - 提案: 初步尝试。\n    Stage 2 - 初稿: 完成初步规范。\n    Stage 3 - 候选: 完成规范和浏览器初步实现。\n    Stage 4 - 完成: 将被添加到下一年度发布。\n")])])]),s("h2",{attrs:{id:"常用babel插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用babel插件"}},[t._v("#")]),t._v(" 常用babel插件")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("名称")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("babel/cli")]),t._v(" "),s("td",[t._v("许命令行使用 babel 命令转译文件")]),t._v(" "),s("td",[t._v("一般在写插件时使用")])]),t._v(" "),s("tr",[s("td",[t._v("babel/polyfill")]),t._v(" "),s("td",[t._v("为所有 API 增加兼容方法")]),t._v(" "),s("td",[t._v("需要在所有代码之前 require，且体积比较大")])]),t._v(" "),s("tr",[s("td",[t._v("babel/plugin-transform-runtime")]),t._v(" "),s("td",[t._v("把帮助类方法从每次使用前定义改为统一 require，精简代码")]),t._v(" "),s("td",[t._v("---")])]),t._v(" "),s("tr",[s("td",[t._v("babel/runtime")]),t._v(" "),s("td",[t._v("helper库")]),t._v(" "),s("td",[t._v("需要安装为依赖，而不是开发依赖，node环境使用，web环境不需要")])]),t._v(" "),s("tr",[s("td",[t._v("babel/loader")]),t._v(" "),s("td",[t._v("babel插件在webpack项目中的一个入口")]),t._v(" "),s("td",[t._v("---")])]),t._v(" "),s("tr",[s("td",[t._v("babel/core")]),t._v(" "),s("td",[t._v("babel的polyfill库")]),t._v(" "),s("td",[t._v("---")])]),t._v(" "),s("tr",[s("td",[t._v("babel/preset-env")]),t._v(" "),s("td",[t._v("babel预制环境的集合插件，通过配置目标环境，转换标准上的新特性")]),t._v(" "),s("td",[t._v("只转新特性，不转api")])]),t._v(" "),s("tr",[s("td",[t._v("babel/preset-stage-2")]),t._v(" "),s("td",[t._v("转换草案stage-2以及stage-3阶段的的新属性")]),t._v(" "),s("td",[t._v("---")])])])]),t._v(" "),s("h4",{attrs:{id:"babel-polyfill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill"}},[t._v("#")]),t._v(" babel-polyfill")]),t._v(" "),s("p",[t._v("Babel默认只转换新的JavaScript句法（syntax），而不转换新的API。比如说："),s("strong",[t._v("Promise、Array.from 、Object.assign、Array.prototype.includes、Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Async")]),t._v("等 "),s("strong",[t._v("都不会转码")]),t._v("。为了解决这个问题，必须使用"),s("code",[t._v("babel-polyfill")]),t._v("，为当前环境提供"),s("strong",[t._v("一个垫片")]),t._v("，"),s("code",[t._v("实现浏览器不支持的原生功能")]),t._v("。")])])}),[],!1,null,null,null);a.default=r.exports}}]);